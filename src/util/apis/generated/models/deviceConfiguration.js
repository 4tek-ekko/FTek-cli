/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the DeviceConfiguration class.
 * @constructor
 * @member {string} [name] The name of the device model and OS version
 * 
 * @member {uuid} [id] The unique id of the device configuration
 * 
 * @member {number} [tier] The tier
 * 
 * @member {string} [frame]
 * 
 * @member {object} [model]
 * 
 * @member {string} [model.name]
 * 
 * @member {string} [model.manufacturer]
 * 
 * @member {string} [model.model]
 * 
 * @member {string} [model.releaseDate]
 * 
 * @member {string} [model.platform]
 * 
 * @member {string} [os]
 * 
 * @member {string} [osName]
 * 
 * @member {number} [marketShare]
 * 
 */
function DeviceConfiguration() {
}

/**
 * Defines the metadata of DeviceConfiguration
 *
 * @returns {object} metadata of DeviceConfiguration
 *
 */
DeviceConfiguration.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'DeviceConfiguration',
    type: {
      name: 'Composite',
      className: 'DeviceConfiguration',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        tier: {
          required: false,
          serializedName: 'tier',
          type: {
            name: 'Number'
          }
        },
        frame: {
          required: false,
          serializedName: 'frame',
          type: {
            name: 'String'
          }
        },
        model: {
          required: false,
          serializedName: 'model',
          type: {
            name: 'Composite',
            className: 'DeviceModel'
          }
        },
        os: {
          required: false,
          serializedName: 'os',
          type: {
            name: 'String'
          }
        },
        osName: {
          required: false,
          serializedName: 'osName',
          type: {
            name: 'String'
          }
        },
        marketShare: {
          required: false,
          serializedName: 'marketShare',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = DeviceConfiguration;
