/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the DistributionGroupWithUsersResponse class.
 * @constructor
 * @member {string} id The unique ID of the distribution group
 * 
 * @member {string} name The name of the distribution group used in URLs
 * 
 * @member {array} users The distribution group users
 * 
 * @member {number} totalUserCount The count of users in the distribution group
 * 
 */
function DistributionGroupWithUsersResponse() {
}

/**
 * Defines the metadata of DistributionGroupWithUsersResponse
 *
 * @returns {object} metadata of DistributionGroupWithUsersResponse
 *
 */
DistributionGroupWithUsersResponse.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'DistributionGroupWithUsersResponse',
    type: {
      name: 'Composite',
      className: 'DistributionGroupWithUsersResponse',
      modelProperties: {
        id: {
          required: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        users: {
          required: true,
          serializedName: 'users',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'UserProfileResponseElementType',
                type: {
                  name: 'Composite',
                  className: 'UserProfileResponse'
                }
            }
          }
        },
        totalUserCount: {
          required: true,
          serializedName: 'total_user_count',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = DistributionGroupWithUsersResponse;
