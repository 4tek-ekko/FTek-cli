/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the RereleaseRequest class.
 * @constructor
 * A request containing information for re-releasing an existing release to a
 * new distribution group.
 *
 * @member {string} [distributionGroupName] Name of a distribution group. The
 * release will be associated with this distribution group. If the
 * distribution group doesn't exist a 400 is returned. If both distribution
 * group name and id are passed, the id is taking precedence.
 * 
 * @member {string} [distributionGroupId] Id of a distribution group. The
 * release will be associated with this distribution group. If the
 * distribution group doesn't exist a 400 is returned. If both distribution
 * group name and id are passed, the id is taking precedence.
 * 
 * @member {string} [releaseNotes] Release notes for this release.
 * 
 * @member {boolean} [mandatoryUpdate] A boolean which determines whether this
 * version should be a mandatory update or not.
 * 
 * @member {number} baseReleaseId The ID of the release that should be
 * re-released
 * 
 */
function RereleaseRequest() {
}

/**
 * Defines the metadata of RereleaseRequest
 *
 * @returns {object} metadata of RereleaseRequest
 *
 */
RereleaseRequest.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'RereleaseRequest',
    type: {
      name: 'Composite',
      className: 'RereleaseRequest',
      modelProperties: {
        distributionGroupName: {
          required: false,
          serializedName: 'distribution_group_name',
          type: {
            name: 'String'
          }
        },
        distributionGroupId: {
          required: false,
          serializedName: 'distribution_group_id',
          type: {
            name: 'String'
          }
        },
        releaseNotes: {
          required: false,
          serializedName: 'release_notes',
          type: {
            name: 'String'
          }
        },
        mandatoryUpdate: {
          required: false,
          serializedName: 'mandatory_update',
          type: {
            name: 'Boolean'
          }
        },
        baseReleaseId: {
          required: true,
          serializedName: 'base_release_id',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = RereleaseRequest;
